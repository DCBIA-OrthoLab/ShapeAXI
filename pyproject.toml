[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
shapeaxi = "shapeaxi.src.saxi_folds:cml"
dentalmodelseg = "shapeaxi.src.eval_model:cml"

[project]
name = "shapeaxi"
dynamic = ["version"]
description = 'Shape Analysis Exploration and Interpretability'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["Shape Analysis",]
authors = [
  { name = "juanprietob", email = "juanprietob@gmail.com" },
  { name = "FlorianDAVAUX", email = "florian.davaux@cpe.fr" }
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Environment :: GPU :: NVIDIA CUDA :: 11.7",
]
  
dependencies = [
  "ipython==8.16.1",
  "frozenlist==1.3.3",
  "seaborn==0.13.0",
  "fsspec==2022.11.0",
  "future==0.18.3",
  "fvcore==0.1.5.post20221221",
  "google-auth==2.15.0",
  "google-auth-oauthlib==0.4.6",
  "grad-cam==1.4.6",
  "grpcio==1.51.1",
  "idna==3.4",
  "imageio==2.24.0",
  "importlib-metadata==6.8.0",
  "importlib-resources==6.0.1",
  "iopath==0.1.10",
  "itk==5.3.0",
  "itk-core==5.3.0",
  "itk-filtering==5.3.0",
  "itk-io==5.3.0",
  "itk-numerics==5.3.0",
  "itk-registration==5.3.0",
  "itk-segmentation==5.3.0",
  "Jinja2==3.1.2",
  "joblib==1.2.0",
  "kaleido==0.2.1",
  "kiwisolver==1.4.4",
  "lightning-bolts==0.7.0",
  "lightning-utilities==0.7.0",
  "lit==16.0.6",
  "Mako==1.2.4",
  "Markdown==3.4.1",
  "MarkupSafe==2.1.1",
  "matplotlib==3.7.1",
  "medcam==0.1.21",
  "monai==1.2.0",
  "mpmath==1.3.0",
  "multidict==6.0.4",
  "networkx==3.0",
  "nibabel==5.0.0",
  "nptyping==2.4.1",
  "numpy==1.25.2",
  "oauthlib==3.2.2",
  "opencv-python==4.7.0.68",
  "packaging==23.0",
  "pandas==1.5.2",
  "Pillow==9.4.0",
  "plotly==5.14.1",
  "portalocker==2.6.0",
  "protobuf==3.20.1",
  "pyarrow==12.0.0",
  "pyasn1==0.4.8",
  "pyasn1-modules==0.2.8",
  "pycodestyle==2.10.0",
  "pyensae==1.3.967",
  "pynrrd==1.0.0",
  "pyparsing==3.0.9",
  "pyquickhelper==1.12.3806",
  "pyquicksetup==0.2.4",
  "python-dateutil==2.8.2",
  "pytorch-lightning==1.8.6",
  "pytz==2022.7",
  "PyWavelets==1.4.1",
  "PyYAML==6.0",
  "requests==2.28.1",
  "requests-oauthlib==1.3.1",
  "rsa==4.9",
  "scikit-image==0.19.3",
  "scikit-learn==1.2.0",
  "scipy==1.9.3",
  "SimpleITK==2.2.1",
  "six==1.16.0",
  "sympy==1.12",
  "tabulate==0.9.0",
  "tenacity==8.2.2",
  "tensorboard==2.11.0",
  "tensorboard-data-server==0.6.1",
  "tensorboard-plugin-wit==1.8.1",
  "tensorboardX==2.5.1",
  "termcolor==2.1.1",
  "threadpoolctl==3.1.0",
  "tifffile==2022.10.10",
  "tomli==2.0.1",
  "torch==2.0.1",
  "torchaudio==2.0.2",
  "torchmetrics==0.11.4",
  "torchvision==0.15.2",
  "tqdm==4.64.1",
  "triton==2.0.0",
  "ttach==0.0.3",
  "typing_extensions==4.7.0",
  "urllib3==1.26.13",
  "vtk==9.2.6",
  "Werkzeug==2.2.2",
  "yacs==0.1.8",
  "yarl==1.8.2",
  "zipp==3.16.2",
  ]

[project.urls]
"Source Code" = "https://github.com/DCBIA-OrthoLab/ShapeAXI/"

[tool.hatch.version]
path = "shapeaxi/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/shapeaxi tests}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py37"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["shapeaxi"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["shapeaxi", "tests"]
branch = true
parallel = true
omit = [
  "src/shapeaxi/__about__.py",
]

[tool.coverage.paths]
shapeaxi = ["src/shapeaxi", "*/shapeaxi/src/shapeaxi"]
tests = ["tests", "*/shapeaxi/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]